pre-alpha-0.5.0

todo make this todo list a convention list/ and different task list  in doxygen and perhaps put it in a md file
todo make doxygen know to look for .todo. in each folder under src to include for the lists

conventions
Any tool needed by this project must be from a container, to make it easy for anyone to have a full environment up and running

todo all source file/folder, and test file/folder names use underscore and not dash ! Sad, I know
todo all header and source file names have the folder path in the first part of their names, and the regular name as the last part, regular name is one word:
  example: hexbatch_api_main.h  (will be a header at the top of the src/hexbatch/api)
           hexbatch_api_topsoil_fungly.cpp ( will be  src/hexbatch/api/topsoil/hexbatch_api_topsoil_fungly.cpp )
  Class names are same as file names, except snake case in place of underscores
  Namespaces are same as file names when needed
  the top namespace is hexbatch, the root of the sources

todo unit tests need to have .test. as the last part of their name, before the extension
todo integrated tests (like when testing the library response in its api) are in the tests folder and tests for hexbatch are in that folder
    each integrated test should be in a folder of the api family, then the folder for the name of the api call, then named for what they try to do
    example: tests/hexbatch/user_accounts/get_default_sudo/get_guid.xpp

Getting the environment up and runnning !!!

docker

todo get headless doxygen running as unbuntu 20.04
todo get entire compile and emscripten toolchain up and running via docker containers, do not use local installed stuff!!
todo get mongodb and sql-lite running as different containers
todo update mysql,phpmysadmin and other older containers to use the latest and best
todo add in git modules for parts of the website, run by the docker nginx, add the shell game and the front page

convention: all super secret passwords and certs will be in the .env , add in ability to store longer things (like ssl certs in a .env folder!)
todo have a self signed ssl cert for localhost in the .env.example file and folder

Testing!
todo add in a testing suit I like as a container and be able to hook it up to the automated tests

git commit chain
todo when doing any sort of commit, rebuild the docs
todo when ready to make a push to a protected branch [alpha,beta,release,master] and not just a mealy mouthed topic partial push,
        have tests run on source (unit + integrated) if any fail do not allow that push
todo figure out a decent version path (do I just read it from the package.json when building and put it in a constant in the code , and use the same thing elewhere?)
todo build the docker image of this library from current source and run integration tests on that also

build SELF Docker Image !
todo Have docker image for running the built library!
in the tools/ one of the docker containers should be running this library , and the library should be the one just built
todo it should use the source code OR
                download the branch used, if this is part of a repo, OR
                if should get the most recent stable version and build it and install it. Should use the same db credential variables for customization
todo integeration tests should be run again inside the docker container as part of its build step, these are the tests associated with that version it built
